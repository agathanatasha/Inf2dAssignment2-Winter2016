-----------------------------------------------------------------------
 ------ Informatics 2D - 2015/16 - Second Assignment - Planning ------
-----------------------------------------------------------------------
 
 Write here you matriculation number (only - your name is not needed)
 Matriculation Number: s1575257
 
1.1) Location(D) and Location(PI) and Location (P) and ConnectWith(D,PI) and ConnectWith(PI,P)


1.2) At(x, location, s)


1.3) Car(x) and Parked(x, s) and Delivered(x, s)


1.4) Location(D) and Location(PI) and Location (P) and ConnectWith(D,PI) and ConnectWith(PI, P) and Car(x) and At(x, D, s)


1.5) Agent(A) and At(A, location1,s) and ConnectWith(location1, location2) => poss(Move(location1,location2))
poss(Move(location1,location2)) => At(A,location2,Result(Move(location1,location2),s)) and not At(A, location1, Result(Move(location1,location2),s))

1.6) Agent(A) and At(A,PI,s) and Car(x) and At(x,PI,s) => Poss(Park(x))
Poss(Park(x)) => Parked(x, Result(Park(x),s))

1.7)Agent(A) and At(A,location1,s) and Car(x) and At(x,location1,s) and ConnectWith(location1,location2) => Poss(Drive(A, x,location1,location2))
Poss(Drive(A, x,location1, location2)) => At(A,location2,Result(Drive(A, x,location1,location2),s))

1.8)Agent(A) and At(A,P,s) and Car(x) and At(x,P,s) => Poss(Deliver(x))
Poss(Deliver(x)) => Delivered(x,Result(Deliver(x),s))

1.9)The frame problem arised. The possibility and effect axioms fail to express that everything that is not mentioned remained the same. STRIPS solve the issue by assuming that anything that is not mentioned are false. It searches forward until goal unifies with resulting state.

1.10)Poss(a,s) => (At(x,destination,Result(a,s)) <=> (a = Move(origin,destination) or a = Drive(A, x,origin,destination)) or (At(x,destination,s) and (a =\= Move(y,z) or a =\= Drive(x,y,z,q)))
Poss(a,s) => (Parked(x,Result(a,s)) <=> a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s)))
Poss(a,s) => (Delivered(x,Result(a,s)) <=> a = Deliver(x,s) or (Delivered(x,s) and a =\= Deliver(y,s)))

1.11)Agent(A) and At(A,L1,s) and ConnectWith(L1,L2) => Poss(Move(L1,L2))
= not(Agent(A) and At(A,L1,s) and ConnectWith(L1,L2)) or Poss(Move(L1,L2))
= not Agent(A) or not At(A,L1,s) or not ConnectWith(L1,L2) or Poss(Move(L1,L2))

Agent(A) and At(A,L1,s) and Car(x) and At(x,L1,s) and ConnectWith(L1,L2) => Poss(Drive(A, x,L1,L2))
= not (Agent(A) and At(A,L1,s) and Car(x) and At(x,L1,s) and ConnectWith(L1,L2)) or Poss(Drive(A, x,L1,L2))
= not Agent(A) or not At(A,L1,s) or not Car(x) or not At(x,L1,s) or not ConnectWith(L1,L2) or Poss(Drive(A, x,L1,L2))

Agent(A) and At(A,PI,s) and Car(x) and At(x,PI,s) => Poss(Park(x))
= not (Agent(A) and At(A,PI,s) and Car(x) and At(x,PI,s)) or Poss(Park(x))
= not Agent(A) or not At(A,PI,s) or not Car(x) or not At(x,PI,s) or Poss(Park(x))

Agent(A) and At(A,P,s) and Car(x) and At(x,P,s) => Poss(Deliver(x))
= not (Agent(A) and At(A,P,s) and Car(x) and At(x,P,s)) or Poss(Deliver(x))
= not Agent(A) or not At(A,P,s) or not Car(x) or not At(x,P,s) or Poss(Deliver(x))

Poss(a,s) => (Parked(x,Result(a,s)) <=> a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s)))
= not Poss(a,s) or (Parked(x,Result(a,s)) <=> a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s)))
= not Poss(a,s) or ((Parked(x,Result(a,s)) => (a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s)))) and ((a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s))) => Parked(x,Result(a,s))))
= not Poss(a,s) or ( (not Parked(x,Result(a,s)) or (a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s))) ) and (not (a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s))) or Parked(x,Result(a,s))) )
= not Poss(a,s) or ( (not Parked(x,Result(a,s)) or (a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s))) ) and (not a = Park(x,s) and not (Parked(x,s) and a =\= Park(y,s)) or Parked(x,Result(a,s))) )
= not Poss(a,s) or ( (not Parked(x,Result(a,s)) or (a = Park(x,s) or (Parked(x,s) and a =\= Park(y,s))) ) and ((not a = Park(x,s) and (not Parked(x,s) or not a =\= Park(y,s))) or Parked(x,Result(a,s))))
= not Poss(a,s) or (( (Parked(x,s) or a = Park(x,s) or not Parked(x,Result(a,s))) and (a =\= Park(y,s) or a = Park(x,s) or not Parked(x,Result(a,s)))) and ((not a = Park(x,s) or Parked(x,Result(a,s))) and (not Parked(x,s) or not a =\= Park(y,s) or Parked(x,Result(a,s)))))
= (Parked(x,s) or a = Park(x,s) or not Parked(x,Result(a,s)) or not Poss(a,s)) and (a =\= Park(y,s) or a = Park(x,s) or not Parked(x,Result(a,s)) or not Poss(a,s)) and (not a = Park(x,s) or Parked(x,Result(a,s)) or not Poss(a,s)) and (not Parked(x,s) or not a =\= Park(y,s) or Parked(x,Result(a,s)) or not Poss(a,s))

Poss(a,s) => (Delivered(x,Result(a,s)) <=> a = Deliver(x,s) or (Delivered(x,s) and a =\= Deliver(y,s)))
= not Poss(a,s) or (Delivered(x,Result(a,s)) <=> a = Deliver(x,s) or (Delivered(x,s) and a =\= Deliver(y,s)))
= not Poss(a,s) or ((Delivered(x,Result(a,s)) => (a = Deliver(x,s) or (Delivered(x,s) and a =\= Deliver(y,s)))) and ((a = Deliver(x,s) or (Delivered(x,s) and a =\= Deliver(y,s))) => Delivered(x,Result(a,s))))
= not Poss(a,s) or (( not Delivered(x,Result(a,s)) or (a = Deliver(x,s) or (Delivered(x,s) and a =\= Deliver(y,s)))) and (not (a = Deliver(x,s) or (Delivered(x,s) and a =\= Deliver(y,s))) or Delivered(x,Result(a,s)) ))
= not Poss(a,s) or (((Delivered(x,s) or a = Deliver(x,s) or not Delivered(x,Result(a,s))) and (a =\= Deliver(y,s)) or a = Deliver(x,s) or not Delivered(x,Result(a,s)) ) and (not (a = Deliver(x,s) or (Delivered(x,s) and a =\= Deliver(y,s))) or Delivered(x,Result(a,s)) ))
= not Poss(a,s) or (((Delivered(x,s) or a = Deliver(x,s) or not Delivered(x,Result(a,s))) and (a =\= Deliver(y,s)) or a = Deliver(x,s) or not Delivered(x,Result(a,s)) ) and (not a = Deliver(x,s) and (not Delivered(x,s) or not a =\= Deliver(y,s)) or Delivered(x,Result(a,s))))
= not Poss(a,s) or (((Delivered(x,s) or a = Deliver(x,s) or not Delivered(x,Result(a,s))) and (a =\= Deliver(y,s)) or a = Deliver(x,s) or not Delivered(x,Result(a,s)) ) and ((not a = Deliver(x,s) and not Delivered(x,s)) or (not a = Deliver(x,s) and not a =\= Delivered (x,Result(a,s))) or Delivered(x,Result(a,s))))

initial states:
Agent(A).
Car(Car).
At(A,D,s0).
At(C,D,s0).

Goal:
Parked(Car,s)

--------------------
Answers to parts 2 and 3 should be included in the appropriate domain-*.pl and instance-*.pl files.
